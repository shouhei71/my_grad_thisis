{\rtf1\ansi\ansicpg932\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset128 HiraKakuProN-W3;\f2\fswiss\fcharset0 ArialMT;
\f3\fnil\fcharset0 AppleSymbols;}
{\colortbl;\red255\green255\blue255;}
{\info
{\author Shohei Okudera}}\paperw11900\paperh16840\margl1440\margr1440\vieww18000\viewh12600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 ##############################\
# 
\f1 \'91\'b2\'98\'5f\'90\'b6\'82\'cc\'8f\'68\'91\'e8
\f0 101004\
##############################\
\
#
\f2\fs26  SOCC\
\
1.\
\uc0\u9633 title
\f0\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 Making Cloud Intermediate Data Fault-Tolerant
\f3 \uc0\u8727 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f2\fs26 \cf0 \uc0\u9633 
\f1 abstruct\
Parallel dataflow programs generate enormous amounts of distributed data that are short-lived, yet are critical for com- pletion of the job and for good run-time performance. We call this class of data as intermediate data. This paper is the first to address intermediate data as a first-class citizen, specifically targeting and minimizing the effect of run-time server failures on the availability of intermediate data, and thus on performance metrics such as job completion time. We propose new design techniques for a new storage sys- tem called ISS (Intermediate Storage System), implement these techniques within Hadoop, and experimentally evalu- ate the resulting system. Under no failure, the performance of Hadoop augmented with ISS (i.e., job completion time) turns out to be comparable to base Hadoop. Under a fail- ure, Hadoop with ISS outperforms base Hadoop and incurs up to 18% overhead compared to base no-failure Hadoop, depending on the testbed setup.\
\
\
\
\

\f2 2.\
\uc0\u9633 title
\f0\fs24 \

\f2\fs26 \uc0\u9633 
\f1 abstruct}