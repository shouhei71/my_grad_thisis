＊1.はじめに
- 最初の段落でクラウドストレージと分散ストレージとあって統一感がない
- このような非集中な分散ストレージでは、各ノードが適切なノードにホップするために各自が持つ経路情報を参照することが多い。特にクライアントからのリクエストを１ホップで対象ノードに転送するシステムでは、最新のシステム全体のノード情報整合性を保つことが必要になる。

(ホップという言葉が伝わるかどうかは不明。以下の節で特に出てこないので、使わずに説明出来ればその方が良い)
=>(例) このような非集中なクラウドストレージでは、任意のノードがデータを保持する担当ノードにリクエストを送るまでに複数のノードを経由する。そのためには各自が周囲のノードの経路情報を管理する必要がある。特に、クライアントが接続したノードから担当ノードに直接、リクエストを送るクラウドストレージでは、全ノードがシステム全体の最新の状態を保持する必要があり、整合性を保つことが難しい。

とか？言い過ぎてたら適当に省いてください。

- 効率よく通信を行うことが可能になった=>効率よく〜可能である

- 肝心のgossipが何故スケーラビリティを制約するのか理由あるいは考察が、どこにも書かれていないが、いいのだろうか？(次の節に書く？)

＊2.Gossip Protocol
- 上の理由からgossipの短所を書いて、問題提議する？

＊4.測定手法
- メモリ使用量でよい
- メモリー使用領域が増えるために、=>メモリ使用量を節約するために、
- ...ソースを改変し... => 口語な感じ。別の表現にしたい

- Cassandraノードを起動した瞬間から10分間の通信量を計測した => どのノードからか分からない。最初起動したノード？それとも最後のノード？

＊5.実験・評価
- 全体的に評価が足りない印象を受ける(オーダーの話だとか、gossip protocolはどれくらいの規模までなら有効かとか書ければよい)
- 見積もれる=>見積もる
- クラスタの設計時にも生かすことができる。=> ここをもっと長めに書いていいと思う
(例) クラスタ設計時にその構成するノード数に応じて、どれくらいの通信量が発生するかを見積もることができ、ネットワークのセットアップやGossip
Protocolがそのシステムにおいて有効か否かを判断するのに生かすことができる。

# まとめと重複するけど、評価として一応書いたほうが良い

＊6.まとめ
- 実験・計測した => 実験・評価した

＊7.今後
- 語る＝＞測る
- 激しいとき => 激しい状態
- チューン=>チャーン
