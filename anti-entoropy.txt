■タイトル
Efficient Reconciliation and Flow Control for Anti-Entropy Protocols
■概要
この論文は、アンチエントロピープロトコルが、限られた頻度の更新を処理できることを示し、(?)
またアンチエントロピープロトコルのフローコントロールスキーマと同じくらいよい新たな融合メカニズムを提案・評価した。

■intro
アンチエントロピー、gossipプロトコルは、強い一貫性のない状態を複製していく方法として
魅力的である。ほとんど制限がなく、ホストの故障やメッセージのロスがあったとしても、参加するメンバー数のlogのオーダー時間内に更新が伝わる。
更新伝搬のふるまいは、よく知られた伝搬解析テクニックとともに簡単にモデル化できる。
結果として、多くの分散アプリケーションがさまざまな一貫していな状態を含んでもよいのでゴシップを使用している。

その人気にもかかわらず、ゴシッププロトコルが更新ヘビーの状況下でどのように振舞うのかはあまり研究されていない。
ゴシッププロトコルでは、予め設定されたラウンド内で高い確率でメッセージを届けることができ、またそれ故、同期する保証を与えているということになっている。
他の動機コミュニケーションチャネルと同じように、ゴシップにも能力は限界がある
。ゴシップのデータをトランスポートするのに可能なバンド幅、ゴシップメッセージを作成、処理するCPUサイクルなどによる制約があるからだ。
更新ヘビーの状況では、ゴシッププロトコルは、ピアー同士の違いを融合する野に必要なすべての更新を送信することはできないかもしれない。
ゴシップチャネルが詰まれば、更新が伝搬する時間は、よくわからなくなる。(arbitrary)

ゴシッププロトコルは、それ自体あまり処理区が重くない、予想されるパフォーマンスであるようにデザインされている。
これについて、デザイナーは、参加者に対するゴシップする率だけでなく、ゴシップメッセージの最大サイズまで(つまり、最大UDPパケットサイズ)
を修正しなければならないだろう。一方、ネットワークやCPUの高負荷をさけるためには、gossipチャネルの能力を制限すれば良い。

この論文は、二つのコントリビューションをした。一つ目は、最小限のCPU負荷とネットワークバンド幅がかげられた状況を対象とした、新たな状態融合メカニズムを提供した。
ふたつめは、ゴシップのフローコントロールを提案、解析した。