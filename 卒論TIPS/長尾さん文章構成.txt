【特に学びたいこと】
・実験、実装(Cassnadraに対応)の解説
・実験へのもっていき方
・評価の方法(表現方法)
・関連研究、背景の書き方。
(図の使い方)


◇長尾さんの論文から学ぶこと
●概要
・半分くらいの背景
・しかし、問題点がある。
・提案、実際に適応、実験、評価

●目次のつけ方
・素直：背景、提案、適応、実験、評価、関連研究、まとめと課題
・キーワードつきのタイトルになっている(メッセージ性のないタイトルではない。)

●はじめに
概要 + 論文構成の紹介。

●研究背景
この章では、本研究が扱うオーバレイネットワークおよび、応用である DHT とその代表的なルーティングアルゴリズムの例について述べる。ま た、既存のルーティングアルゴリズムの問題点を指摘する。
・オーバーレイ
-言葉の説明だけ。

・DHT
-1.とは？
-オーバレイを使って言葉の説明。
-得られる利点の紹介
-機能の紹介

-2.アルゴリズムの紹介
--chord
(詳しい！)
--IDの割り当てかた(数式を使って)
--finger,succerssor listを掘り下げて説明。
(目的、オーダの話)
(1ページ図を使って説明している)


--kademlia
(詳しい！)
--IDの割り当てかた(数式を使って)

・既存のルーティングアルゴリズムの問題点
Chord や Kademlia をはじめとする既存のルーティングアルゴリズムの 問題点について述べる。
(紹介した二つを包含するルーティングアルゴリズムについての問題を上げる。)
-４つ箇条書きで問題点を述べる。
ネットワーク近接性が考慮されない
(代表的なアルゴリズムは、〇〇なことが多い。これを解決するためには、〇〇を考慮する必要がある。)

経路表の厳格性
既存のアルゴリズムは、〇〇で、だめだ。〇〇が十分であれば、効率がわるい。
実際、〇〇だ。Aの場合は、あああだし、Bの場合もあれあれだ。

経路表サイズの動的変更が出来ない
既存のアルゴリズムは、〇〇で、だめだ。
Aの場合は、あああだし、Bの場合もあれあれだ。

ゼロホップ DHT が実現されない
〇〇とは、あああのことである。Aの場合は、あああだし、Bの場合もあれあれだ。
よって、ゼロホップ DHT の実現は困難である。

●柔軟な経路表(提案の紹介)
・柔軟な経路表とは、〇〇な手法である。〇〇な利点がある。これはDHTに求められる特性を維持しつつ実現される。
・経路表の分布について議論したい。<-ルーティング効率に大きく影響を与えるから。
(経路表を保持しているノードからの距離に関してどのように経路表エン トリが分布しているかがルーティング効率に大きな影響を与える。ここで は、その分布について議論を行う。)

・ID空間上での距離を同定義するか
(数学、数式から証明、一般的な定理についても述べておく。)
・chordや、kademliaの経路分布はどうなるか？
(図、距離関数の定義を用いて、分布関数について述べる---->>>)
-->[結論]分布関数は以下の特性を持つ。ここに注目する。

・目標分布関数の定義、
柔軟な経路表とは？を数式で表現した。

・経路表エントリの管理方法
-追加
いくつかパターンがありますよー！ただ、共通してこれらの方式は組み合わせることが可能であるが、メモリ消費量やト ラフィックの増加に注意する必要がある。
->追加するタイミングの例。
…(方式の説明、利点、欠点)
…
…

-削除
どーいときに削除が起こるかの共通的特徴。削除するエントリーの決定方法にはバリエーションがありますよ。
…(item titleは尖った一言。詳しく説明。理由。削除したどんなメリットがあるか。相対的な優先順位の話。)
…

-ルーティング方法
共通することを述べる。二つパターンある。
Iterative ルーティンク(説明、利点、必要な前提条件、発生する制約)
Recursive ルーティンク()

-柔軟な経路表の利点
このように構成した柔軟な経路表には以下のような利点がある。と箇条書きする。

ノード数の増減に対応可能
P2P,数十万から数百万ノード規模のネットワークサーバの裏側で サービスを支えるような数ノードから数十、数百ノードまでのネットワー クの構築に利用できることにな。
既存のアルゴリズムではまる●なのでダメんだ。

トラフィックの有効利用入手したノード情報を積極的に取り入れる。経路表の都合に合わせた 経路表を作るための通信を行うのではなく、通常に行う通信から得られる ノード情報を経路表に生かすことができる。これにより、経路表メンテナ ンスのためのトラフィックの増大を防ぐとともに、トラフィック量を有効 利用することが出来る。
…
…
…

● FRT-Chord:柔軟な経路表の Chord への適用
(わりかしサクッと2,3ページ)

実際にアルゴリズムを適用して実装してみたFRT-Chordを紹介する。
・基本となるアルゴリズム
さくっと概要を説明。ベースアルゴリズムとして、Chordを選んだ訳を説明。
1.先行研究が多く、経路長が高い確率で O(log N ) にな ること等、いくつかの性質に関して証明が与えられていることが挙げられ る
2.Chord が比較的シンプルなアルゴリズムであること
3.DHT 実装に広く利用されており利用実績が豊富であること が挙げられる

・追加アルゴリズム
-上で述べた特徴の中から、これをチョイスしたという体で解説していく。
FRT-Chord の追加アルゴリズムは、すべての通信をトリガとして経路表 へノード情報の追加を行う。
(追加アルゴリズムは、経路表エントリの管理方法で説明済み、[すべての通信をトリガとして経路表 へノード情報の追加]も追加で説明済み)
lookup だけでなく、フォワーディングやネッ トワークへの加入 (Join) 時など、様々な通信時に得たノード情報を経路表 へ追加する。
(追加で説明済み)
また、Join 時に初期ルーティングテーブルとして Successor ノードから経路表エントリ情報を受け取る。また、必要でない lookup や、 経路表エントリの交換は実行しないものとする。
(baseのChordのアルゴリズムも説明済み)


・削除アルゴリズム
-具体的に関数を説明

・ルーティング方法
Iterativeを選択。理由。数式を使って、こんなふうに、ルーティングしますと解説。

・Join方法
Join 時には、他のルーティングアルゴリズムと同様に….

●評価
[概要を述べる]
この章では、Overlay Weaver 上に FRT-Chord を実装する。
(Cassandraを同多数台起動したか？)
次にその実 装を利用して実験を行い、提案手法である FRT-Chord が既存の DHT ア ルゴリズムに求められる性質を満たしていることを確認する。
(ノード台数において、通信量の変化を語る。)
また、ノー ドが少ないときにゼロホップになるなど FRT-Chord が Chord より優れて いる点を確認する。
(実験結果の考察を行う。)

5.1 実装 この章では、Overlay Weaver[12, 8] を利用した FRT-Chord の実装について詳しく述べる。

5.1.1	FRT-Chord の Overlay Weaver 上での実装FRT-Chord を、オーバレイ構築ツールキットである Overlay Weaver 上 に実装した。
[概略ひとこと]
Overlay Weaver 上に新たなルーティングアルゴリズムを実装するため には、最低限以下の API を Java 言語を用いて実装するのみでよい。少な いコードでシミュレータのみでなく実ネットワーク上で動作するアルゴリ ズムを記述できることが Overlay Weaver の特徴である。
[Overlay Weaverの利用者側から見た利点。すでに実装があり、さくっと実験できるヨー。]
-APIをならべる

5.1.2 経路表のデータ構造
-実装に当たって。検索効率のために常に ds に関して昇順に管理されるようにした
->゙ Chord に対してオーダー的に不利になっていない

5.2実験環境
…
…

5.3実験 1:経路表構成手法の検証 提案手法による経路表管理を実行することで経路表エントリ分布がF ̄(2x) − F ̄(x) = (一定)	(5.1) 
に近づくことを確認する。
[なんのための実験かを明示。]
5.3.1 実験内容
[その実験内容とは。]
ノード数 N = 10000 とし、経路表サイズ L=5, 10, 20, 30, 40, 50, 100 
(ノード台数、seedはサラッと紹介。)
それぞれに関して、ランダムに選択した1ノードからランダムに選択した ID への lookup を 10000 回実行する。
(俺の場合は時間だね。)
実行後、ノードの経路表の分布を取得し、目標分布との比較を行う。
(パケットを解析して10秒ごとに集めた的なね。)

んで数式を使って解析することをいう。

5.3.2 実験結果および考察
それぞれの経路表サイズごとの分布関数を経路表エントリの位置ごとに301 (s+dmod2m ∈X) 0 (s+dmod2m ̸∈X)プロットしたものが図 5.1 および図 5.2 である。
グラフを二つ(普通と、目盛をlogに)

5.3.4 結論

5.4 この調子で実験を進めていく感じ。

●関連研究
・LPRS では、lookup 時の通信を利用してレイテンシを計測し、レイテ ンシの小さいノードを優先的に経路表に取り入れることにより、ルーティ ングにネットワーク近接性を利用する。
[ノード選択の工夫という意味で関連なのか。]
こうこうこういうやりかたで、丸アマルを改善。
文献によると、〇〇は、a,b,cの３津に分類でき、この手法は、aにぞくする。
[まず、文献の紹介]
LPRSと本研究の関連は、ｄさｄｆだが、あｓだ点が異なる。また、あっちの目的は、だｓだが、本研究はまるあｍるでなことをもくてきしていてことなる。

・NoN-GREEDY ルーティンク
紹介。共通点は、まるまるだが、あｓｄふぁことなる。

・small-world現象
まるまるが共通。
論文でていぎされたものの引用。
提案手法は、これを取り入れた物。


●まとめと課題
-まとめ
〇〇には、問題点があった。本研究では、〇〇を提案した。
提案手法が〇〇だと示した。
〇〇-chordでなになにが可能である。

ー課題
箇条書きで幾つか上げる。実験でわかった改善点。アプローチをしめしてもよい。
将来でどこでいきるかとか。